AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This is a template containing 2 EC2 instances, an Application Load Balancer, S3 Bucket,
  RedisCache and SNS Trigger Lambda
Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/24
  PublicSubnetStaticEc2CIDR:
    Description: Please enter the IP range (CIDR notation) for the Public Subnet wich contains the EC2 instance
    Type: String
    Default: 10.0.0.0/28
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref MyVPC
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName} Public Routes'
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetEC2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetEC2
  NetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  InboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkACL
      CidrBlock: 0.0.0.0/0
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      Egress: false
      PortRange:
        From: 0
        To: 65535
  OutboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkACL
      CidrBlock: 0.0.0.0/0
      RuleNumber: 100
      RuleAction: allow
      Protocol: -1
      Egress: true
      PortRange:
        From: 0
        To: 65535
  PublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref NetworkACL
      SubnetId: !Ref PublicSubnetEC2
  PublicSubnetEC2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubnetStaticEc2CIDR
      VpcId: !Ref MyVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${EnvironmentName} Public Subnet (AZ1)'
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref MyVPC
  PublicSubnets:
    Description: A list of the public subnets
    Value: !Ref PublicSubnetEC2
